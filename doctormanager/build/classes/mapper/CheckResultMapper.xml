<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yunji.doctormanager.dao.CheckResultMapper">
	<resultMap id="BaseResultMap" type="cn.yunji.doctormanager.entity.CheckResult">
		<id column="checkResultId" property="checkresultid" jdbcType="INTEGER" />
		<result column="hospitalId" property="hospitalid" jdbcType="CHAR" />
		<result column="mId" property="mid" jdbcType="CHAR" />
		<result column="doctorId" property="doctorid" jdbcType="INTEGER" />
		<result column="checkprojectid" property="checkprojectid"
			jdbcType="INTEGER" />
		<result column="checkDate" property="checkdate" jdbcType="TIMESTAMP" />
		<result column="gWeeks" property="gweeks" jdbcType="INTEGER" />
		<result column="picLink" property="picLink" jdbcType="CHAR" />
		<result column="uploadDate" property="uploadDate" jdbcType="TIMESTAMP" />
		<result column="fontresult" property="fontresult" jdbcType="CHAR" />
		<association property="gravidaInfo" column="mId"
			javaType="cn.yunji.doctormanager.entity.GravidaInfo"
			select="cn.yunji.doctormanager.dao.GravidaInfoMapper.selectByPrimaryKey"></association>
		<association property="doctor" column="doctorid"
			javaType="cn.yunji.doctormanager.entity.Doctor" select="cn.yunji.doctormanager.dao.DoctorMapper.selectByPrimaryKey"></association>
		<collection property="checkDetailList" javaType="ArrayList"
			ofType="cn.yunji.doctormanager.entity.CheckDetail" column="checkResultId"
			select="cn.yunji.doctormanager.dao.CheckDetailMapper.selectByFKCR">
		</collection>
		<!-- 根据mid查出对应的异常的孕妇信息 mcally.ly -->
		<collection property="abnormityinfo" column="mid" javaType="ArrayList"
			ofType="cn.yunji.doctormanager.entity.Abnormityinfo"
			select="cn.yunji.doctormanager.dao.AbnormityinfoMapper.selectByPrimaryKey2">
		</collection>
	</resultMap>
	<resultMap id="BaseResultMap2" type="cn.yunji.doctormanager.entity.CheckResult">
		<id column="checkResultId" property="checkresultid" jdbcType="INTEGER" />
		<result column="hospitalId" property="hospitalid" jdbcType="CHAR" />
		<result column="mId" property="mid" jdbcType="CHAR" />
		<result column="doctorId" property="doctorid" jdbcType="INTEGER" />
		<result column="checkprojectid" property="checkprojectid"
			jdbcType="INTEGER" />
		<result column="checkDate" property="checkdate" jdbcType="TIMESTAMP" />
		<result column="gWeeks" property="gweeks" jdbcType="INTEGER" />
		<result column="uploadDate" property="uploadDate" jdbcType="TIMESTAMP" />
		<result column="picLink" property="picLink" jdbcType="CHAR" />
		<association property="checkProject" column="checkprojectid"
			javaType="cn.yunji.doctormanager.entity.CheckProject"
			select="cn.yunji.doctormanager.dao.CheckProjectMapper.selectByPrimaryKey"></association>
		<collection property="checkDetailList" javaType="ArrayList"
			ofType="cn.yunji.doctormanager.entity.CheckDetail" column="checkResultId"
			select="cn.yunji.doctormanager.dao.CheckDetailMapper.selectByFKCR">
		</collection>
	</resultMap>
	<resultMap id="BaseResultMap3" type="cn.yunji.doctormanager.entity.CheckResult">
		<id column="checkResultId" property="checkresultid" jdbcType="INTEGER" />
		<result column="hospitalId" property="hospitalid" jdbcType="CHAR" />
		<result column="mId" property="mid" jdbcType="CHAR" />
		<result column="doctorId" property="doctorid" jdbcType="INTEGER" />
		<result column="checkprojectid" property="checkprojectid"
			jdbcType="INTEGER" />
		<result column="checkDate" property="checkdate" jdbcType="TIMESTAMP" />
		<result column="gWeeks" property="gweeks" jdbcType="INTEGER" />
		<result column="uploadDate" property="uploadDate" jdbcType="TIMESTAMP" />
		<result column="picLink" property="picLink" jdbcType="CHAR" />
		<association property="checkProject" column="checkprojectid"
			javaType="cn.yunji.doctormanager.entity.CheckProject"
			select="cn.yunji.doctormanager.dao.CheckProjectMapper.selectByPrimaryKey"></association>
		<collection property="abnormityinfo" javaType="ArrayList"
			ofType="cn.yunji.doctormanager.entity.Abnormityinfo" column="checkprojectid"
			select="cn.yunji.doctormanager.dao.AbnormityinfoMapper.findByResultId">
		</collection>
	</resultMap>
	<sql id="Base_Column_List">
		checkResultId, hospitalId, mId, doctorId, checkprojectid, checkDate,
		gWeeks,uploadDate,picLink,fontresult
	</sql>
	<!--luoyc 根据上传日期，查找指定孕妇指定项目的上传的检查结果以及异常信息 -->
	<select id="findByDateRange3" resultMap="BaseResultMap2">
		select *
		from checkresult
		where mid=#{0} and checkprojectid=#{3} and uploadDate between #{1} and #{2}
		order by checkDate
	</select>
	<!--luoyc 根据上传日期，查询指定孕妇上传的检查结果及异常信息 -->
	<select id="findByDateRange2" resultMap="BaseResultMap3">
		select *
		from checkresult
		where mid=#{0} and uploadDate between #{1} and #{2} order by checkDate
	</select>
	<!--luoyc 根据上传日期，查询指定孕妇上传的检查结果 -->
	<select id="findByDateRange" resultMap="BaseResultMap2">
		select *
		from checkresult
		where mid=#{0} and checkDate between #{1} and #{2} order by checkDate
	</select>
	<!-- 动态根据表名查询孕妇检查结果 -->
	<select id="queryByProjectId" resultType="java.util.HashMap">
		select checkDate
		from ${table}
		<where>
			<if test="mid != null">
				and mId = #{mid,jdbcType=CHAR}
			</if>
			<if test="projectId != null">
				and checkProjectId = #{projectId,jdbcType=INTEGER}
			</if>
		</where>
		ORDER BY checkDate DESC
	</select>
	<!-- 根据孕妇ID，检查时间，检查项目ID查询孕妇检查记录 -->
	<select id="queryByCheckDate" resultMap="BaseResultMap">
		select *
		from checkresult
		<where>
			<if test="mid != null">
				and mId = #{mid,jdbcType=CHAR}
			</if>
			<if test="projectId != null">
				and checkProjectId = #{projectId,jdbcType=INTEGER}
			</if>
			<if test="checkDate != null">
				and checkDate = #{checkDate,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
	<!-- 查询检查明细及指标 -->
	<select id="queryCheckDetail" resultType="java.util.HashMap">
		SELECT
		cd.cid, cd.checkValue, ci.cname, ci.cbegin, ci.cend, ci.cunit, cr.picLink
		FROM checkdetail cd
		LEFT JOIN checkresult cr ON cd.checkResultId = cr.checkResultId
		LEFT JOIN checkindex ci ON cd.cid = ci.cid
		WHERE cr.gWeeks = #{weeks,jdbcType=INTEGER}
		AND cr.checkProjectId = #{checkProjectId,jdbcType=INTEGER}
	</select>
	<!-- 根据孕程、检查项目、mid 查询检查明细及指标 @yinzx -->
	<select id="queryCheckDetailByMId" resultType="java.util.HashMap">
		<![CDATA[
		SELECT
		cd.cid, cd.checkValue,cd.symbol, ci.cname, ci.cbegin, ci.cend,
		ci.cunit,ci.referencevalue,cd.description,cr.picLink,cr.gWeeks,cr.checkProjectId,cr.checkResultId,cr.checkDate,cr.fontresult,cp.riskname
		FROM checkdetail cd
		LEFT JOIN checkresult cr ON cd.checkResultId = cr.checkResultId
		LEFT JOIN checkindex ci ON cd.cid = ci.cid
		left join checkproject cp on cr.checkProjectId=cp.checkProjectId
		JOIN antenatal_item a
		WHERE a.antenatalBeginWeeks <= #{weeks,jdbcType=INTEGER} and
		a.antenatalEndWeeks >= #{weeks,jdbcType=INTEGER} and (cr.gWeeks
		between
		a.antenatalBeginWeeks and a.antenatalEndWeeks)
		AND cr.checkProjectId = #{checkProjectId,jdbcType=INTEGER}
		AND cr.mId
		=#{mId,jdbcType=CHAR}
		AND cr.checkResultId=
		(select checkResultId from checkResult where gWeeks between
		a.antenatalBeginWeeks and a.antenatalEndWeeks
		AND checkProjectId = #{checkProjectId,jdbcType=INTEGER}
		AND mId = #{mId,jdbcType=CHAR} order by checkDate desc limit 1)group by
		ci.cname
		 ]]>
	</select>
	<!-- 根据孕周、mid查询相关孕程查询检查明细及指标 @wanghp -->
	<select id="getCheckDetailByMid" resultType="java.util.HashMap">
	    <![CDATA[ 
	    SELECT
		cd.cid, cd.checkValue,cd.symbol, ci.cname, ci.cbegin, ci.cend,cd.description,
		ci.cunit,ci.referencevalue,cd.description,cr.picLink,cr.gWeeks,cr.checkProjectId,cr.checkResultId,cr.checkDate,cr.fontresult,cp.riskname
		FROM checkdetail cd
		LEFT JOIN checkresult cr ON cd.checkResultId = cr.checkResultId
		LEFT JOIN checkindex ci ON cd.cid = ci.cid
    left join checkproject cp on cr.checkProjectId=cp.checkProjectId
		JOIN antenatal_item a
		WHERE a.antenatalBeginWeeks <= #{weeks,jdbcType=INTEGER}
    and a.antenatalEndWeeks >= #{weeks,jdbcType=INTEGER} 
    and (cr.gWeeks between a.antenatalBeginWeeks and a.antenatalEndWeeks)
		AND cr.checkProjectId in(1,2,3,4,5,7,10,11,13,14,26,29,30,31,32,33,35)
		AND cr.mId=#{mid,jdbcType=CHAR}
		AND cr.checkResultId in(select checkResultId from checkResult where gWeeks between a.antenatalBeginWeeks and a.antenatalEndWeeks AND checkProjectId  in(1,2,3,4,5,7,10,11,13,14,26,29,30,31,32,33,35)
		AND mId = #{mid,jdbcType=CHAR} order by checkDate desc)
    group by ci.cname
    order by cr.checkDate desc
	    ]]>
	</select>
	<!-- 根据检查项目id、mid 查询检查结果id（按时间升序） @yinzx -->
	<select id="queryCheckResultId" resultType="java.util.HashMap">
		SELECT
		checkResultId,checkDate
		FROM checkresult
		WHERE checkProjectId = #{checkProjectId,jdbcType=INTEGER}
		AND mId = #{mId,jdbcType=CHAR}
		order by checkDate
	</select>
	<!-- 按项目查询： 根据检查项目id、mid、检查结果id查询检查明细及指标 @yinzx -->
	<select id="queryResultByProject" resultType="java.util.HashMap">
		SELECT
		cd.cid, cd.checkValue,cd.symbol, ci.cname, ci.cbegin, ci.cend, ci.cunit,
		cr.picLink
		FROM checkdetail cd
		LEFT JOIN checkresult cr ON cd.checkResultId = cr.checkResultId
		LEFT JOIN checkindex ci ON cd.cid = ci.cid
		WHERE cr.checkResultId = #{checkResultId,jdbcType=INTEGER}
		AND cr.checkProjectId = #{checkProjectId,jdbcType=INTEGER}
		AND cr.mId = #{mId,jdbcType=CHAR}
	</select>
	<!-- 按指标名字查询： 根据检查项目id、mid、指标名字 查询该项指标的历史数据 @yinzx -->
	<select id="queryHistoByCname" resultType="java.util.HashMap">
		SELECT
		cd.checkValue, ci.cname, cr.checkDate,cr.checkResultId
		FROM checkdetail cd
		LEFT JOIN checkresult cr ON cd.checkResultId = cr.checkResultId
		LEFT JOIN checkindex ci ON cd.cid = ci.cid
		WHERE cr.checkProjectId = #{checkProjectId,jdbcType=INTEGER}
		AND cr.mId =#{mId,jdbcType=CHAR}
		AND ci.cname=#{cname,jdbcType=CHAR}
		order by checkDate
	</select>
	<!-- 根据检查时间查询检查明细及指标 -->
	<select id="queryCheckDetailByDate" resultType="java.util.HashMap">
		SELECT
		cd.cid, cd.checkValue, ci.cname, ci.cbegin, ci.cend, ci.cunit
		FROM checkdetail cd
		LEFT JOIN checkresult cr ON cd.checkResultId = cr.checkResultId
		LEFT JOIN checkindex ci ON cd.cid = ci.cid
		WHERE cr.checkDate = #{checkDate,jdbcType=TIMESTAMP}
		AND cr.checkProjectId = #{projectId,jdbcType=INTEGER}
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap2"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from checkresult
		where checkResultId = #{checkresultid,jdbcType=INTEGER}
	</select>
	<!-- 通过doctorid查找对应的检查结果 mcally.ly -->
	<select id="selectByDoctorId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from checkresult
		where doctorid = #{doctorid,jdbcType=INTEGER}
	</select>
	<!-- 通过孕妇id查询孕妇所有b超报告的双顶径、股骨长和腹围数据 @Luoyc -->
	<select id="selectFetalWeightByMid" resultType="java.util.HashMap"
		parameterType="java.lang.String">
		select
		cr.checkDate,cd.checkvalue BPD,cd1.checkvalue FL,cd2.checkvalue AC
		from checkresult cr
		left join checkdetail cd on cd.checkResultId=cr.checkResultId and
		cd.cid=95
		left join checkdetail cd1 on cd1.checkResultId=cr.checkResultId and
		cd1.cid=96
		left join checkdetail cd2 on cd2.checkResultId=cr.checkResultId and
		cd2.cid=97
		where cr.mId=#{0} and cr.checkprojectid=14
	</select>

	<!-- @author wuwj 根据孕妇编号、孕周查询孕检记录 <select id="selectByMid" resultMap="java.util.HashMap" 
		parameterType="java.lang.String" > select checkProjectId from checkresult 
		where mId = #{0} and gWeeks = #{1} </select> -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from checkresult
		where checkResultId = #{checkresultid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="cn.yunji.doctormanager.entity.CheckResult">
		insert into checkresult (checkResultId, hospitalId, mId,
		doctorId, checkprojectid, checkDate,
		gWeeks)
		values (#{checkresultid,jdbcType=INTEGER}, #{hospitalid,jdbcType=CHAR},
		#{mid,jdbcType=CHAR},
		#{doctorid,jdbcType=INTEGER}, #{checkprojectid,jdbcType=INTEGER}, #{checkdate,jdbcType=TIMESTAMP},
		#{gweeks,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="cn.yunji.doctormanager.entity.CheckResult">
		insert into checkresult
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="checkresultid != null">
				checkResultId,
			</if>
			<if test="hospitalid != null">
				hospitalId,
			</if>
			<if test="mid != null">
				mId,
			</if>
			<if test="doctorid != null">
				doctorId,
			</if>
			<if test="riskfactorid != null">
				checkprojectid,
			</if>
			<if test="checkdate != null">
				checkDate,
			</if>
			<if test="gweeks != null">
				gWeeks,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="checkresultid != null">
				#{checkresultid,jdbcType=INTEGER},
			</if>
			<if test="hospitalid != null">
				#{hospitalid,jdbcType=CHAR},
			</if>
			<if test="mid != null">
				#{mid,jdbcType=CHAR},
			</if>
			<if test="doctorid != null">
				#{doctorid,jdbcType=INTEGER},
			</if>
			<if test="riskfactorid != null">
				#{checkprojectid,jdbcType=INTEGER},
			</if>
			<if test="checkdate != null">
				#{checkdate,jdbcType=TIMESTAMP},
			</if>
			<if test="gweeks != null">
				#{gweeks,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.yunji.doctormanager.entity.CheckResult">
		update checkresult
		<set>
			<if test="hospitalid != null">
				hospitalId = #{hospitalid,jdbcType=CHAR},
			</if>
			<if test="mid != null">
				mId = #{mid,jdbcType=CHAR},
			</if>
			<if test="doctorid != null">
				doctorId = #{doctorid,jdbcType=INTEGER},
			</if>
			<if test="riskfactorid != null">
				checkprojectid = #{checkprojectid,jdbcType=INTEGER},
			</if>
			<if test="checkdate != null">
				checkDate = #{checkdate,jdbcType=TIMESTAMP},
			</if>
			<if test="gweeks != null">
				gWeeks = #{gweeks,jdbcType=INTEGER},
			</if>
		</set>
		where checkResultId = #{checkresultid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.yunji.doctormanager.entity.CheckResult">
		update checkresult
		set hospitalId = #{hospitalid,jdbcType=CHAR},
		mId = #{mid,jdbcType=CHAR},
		doctorId = #{doctorid,jdbcType=INTEGER},
		checkprojectid = #{checkprojectid,jdbcType=INTEGER},
		checkDate = #{checkdate,jdbcType=TIMESTAMP},
		gWeeks = #{gweeks,jdbcType=INTEGER}
		where checkResultId = #{checkresultid,jdbcType=INTEGER}
	</update>
	<!-- 根据孕周查看各项指标 @Author hongwx -->
	<select id="selectCheckDetailByMId" resultType="java.util.HashMap">
        SELECT
        cd.cid, cd.checkValue, ci.cname,ci.shortname,
        ci.cunit,ci.referencevalue,cr.checkDate,cr.gWeeks,cr.checkProjectId,cr.picLink,cr.checkResultId,cr.fontresult
        FROM checkdetail cd
        LEFT JOIN checkresult cr ON cd.checkResultId = cr.checkResultId
        LEFT JOIN checkindex ci ON cd.cid = ci.cid
        JOIN antenatal_item a
        WHERE a.antenatalBeginWeeks &lt;= #{weeks,jdbcType=INTEGER} and
        a.antenatalEndWeeks >= #{weeks,jdbcType=INTEGER} and (cr.gWeeks
        between
        a.antenatalBeginWeeks and a.antenatalEndWeeks)
        AND cr.checkProjectId = #{checkProjectId,jdbcType=INTEGER}
        AND cr.mId
        =#{mid,jdbcType=CHAR}
        AND cr.checkResultId=
        (select checkResultId from checkResult where gWeeks between
        a.antenatalBeginWeeks and a.antenatalEndWeeks
        AND checkProjectId = #{checkProjectId,jdbcType=INTEGER}
        AND mId = #{mid,jdbcType=CHAR} order by checkDate desc limit 1)group by
        ci.cname
    </select>
</mapper>