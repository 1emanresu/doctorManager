<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yunji.doctormanager.dao.HighriskTestMapper">
	<resultMap id="BaseResultMap" type="cn.yunji.doctormanager.entity.HighriskTest">
		<id column="highRiskTestId" property="highrisktestid" jdbcType="INTEGER" />
		<result column="highRiskTestResultId" property="highrisktestresultid"
			jdbcType="INTEGER" />
		<result column="highRiskProblemId" property="highriskproblemid"
			jdbcType="INTEGER" />
		<result column="ifhighRisk" property="ifhighrisk" jdbcType="INTEGER" />
		<result column="highRiskTestScore" property="highrisktestscore"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		highRiskTestId, highRiskTestResultId, highRiskProblemId,
		ifhighRisk,
		highRiskTestScore
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from highrisktest
		where highRiskTestId =
		#{highrisktestid,jdbcType=INTEGER}
	</select>
	<!-- 以孕妇id查找孕妇最近一次的高危自测内容 -->
	<select id="findByMid" resultType="java.util.HashMap">
		select
		ht.*,hp.highRiskProblem,hp.ProblemScore,htr.ResultDate from
		highrisktest ht
		left JOIN highriskproblem hp
		on
		ht.highRiskProblemId=hp.highRiskProblemId
		left join highrisktestresult
		htr on htr.highRiskTestResultId=ht.highRiskTestResultId
		where ht.ifhighRisk=0 and
		ht.highRiskTestResultId
		=(select highRiskTestResultId from
		highrisktestresult where mid = #{0} order by ResultDate desc limit 1) ;
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		highrisktest
		where highRiskTestId = #{highrisktestid,jdbcType=INTEGER}
	</delete>

	<!-- 循环添加数据zhangqy -->
	<insert id="insertLoop" parameterType="java.util.List">
		insert into highrisktest
		(highRiskTestId, highRiskTestResultId,
		highRiskProblemId, ifhighRisk,
		highRiskTestScore) values 
		<foreach collection="list" item="highItem" index="index"
			separator=",">
			(
			#{highItem.highrisktestid,jdbcType=INTEGER},
			#{highItem.highrisktestresultid,jdbcType=INTEGER},
			#{highItem.highriskproblemid,jdbcType=INTEGER},
			#{highItem.ifhighrisk,jdbcType=INTEGER},
			#{highItem.highrisktestscore,jdbcType=INTEGER}
			)
		</foreach>
	</insert>


	<insert id="insert" parameterType="cn.yunji.doctormanager.entity.HighriskTest">
		insert into highrisktest
		(highRiskTestId, highRiskTestResultId,
		highRiskProblemId, ifhighRisk,
		highRiskTestScore
		)
		values (#{highrisktestid,jdbcType=INTEGER},
		#{highrisktestresultid,jdbcType=INTEGER},
		#{highriskproblemid,jdbcType=INTEGER}, #{ifhighrisk,jdbcType=INTEGER},
		#{highrisktestscore,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="cn.yunji.doctormanager.entity.HighriskTest">
		insert into highrisktest
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="highrisktestid != null">
				highRiskTestId,
			</if>
			<if test="highrisktestresultid != null">
				highRiskTestResultId,
			</if>
			<if test="highriskproblemid != null">
				highRiskProblemId,
			</if>
			<if test="ifhighrisk != null">
				ifhighRisk,
			</if>
			<if test="highrisktestscore != null">
				highRiskTestScore,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="highrisktestid != null">
				#{highrisktestid,jdbcType=INTEGER},
			</if>
			<if test="highrisktestresultid != null">
				#{highrisktestresultid,jdbcType=INTEGER},
			</if>
			<if test="highriskproblemid != null">
				#{highriskproblemid,jdbcType=INTEGER},
			</if>
			<if test="ifhighrisk != null">
				#{ifhighrisk,jdbcType=INTEGER},
			</if>
			<if test="highrisktestscore != null">
				#{highrisktestscore,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.yunji.doctormanager.entity.HighriskTest">
		update highrisktest
		<set>
			<if test="highrisktestresultid != null">
				highRiskTestResultId =
				#{highrisktestresultid,jdbcType=INTEGER},
			</if>
			<if test="highriskproblemid != null">
				highRiskProblemId =
				#{highriskproblemid,jdbcType=INTEGER},
			</if>
			<if test="ifhighrisk != null">
				ifhighRisk = #{ifhighrisk,jdbcType=INTEGER},
			</if>
			<if test="highrisktestscore != null">
				highRiskTestScore =
				#{highrisktestscore,jdbcType=INTEGER},
			</if>
		</set>
		where highRiskTestId = #{highrisktestid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.yunji.doctormanager.entity.HighriskTest">
		update
		highrisktest
		set highRiskTestResultId =
		#{highrisktestresultid,jdbcType=INTEGER},
		highRiskProblemId =
		#{highriskproblemid,jdbcType=INTEGER},
		ifhighRisk =
		#{ifhighrisk,jdbcType=INTEGER},
		highRiskTestScore =
		#{highrisktestscore,jdbcType=INTEGER}
		where highRiskTestId =
		#{highrisktestid,jdbcType=INTEGER}
	</update>
	<select id="findByMidandweeks" resultType="java.util.HashMap">
        select
        ht.*,hp.highRiskProblem,hp.ProblemScore,htr.ResultDate from
        highrisktest ht
        left JOIN highriskproblem hp
        on
        ht.highRiskProblemId=hp.highRiskProblemId
        left join highrisktestresult
        htr on htr.highRiskTestResultId=ht.highRiskTestResultId
        where ht.ifhighRisk=0 and
        ht.highRiskTestResultId
        in(select highRiskTestResultId from
        highrisktestresult where mid = #{mid,jdbcType=CHAR} or ResultDate between #{begintime,jdbcType=CHAR} and #{endtime,jdbcType=CHAR} order by ResultDate desc) ;
        
    </select>
</mapper>